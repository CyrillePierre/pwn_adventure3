#include <cstdio>
#include <dlfcn.h>

#ifndef HACK_PATH
#define HACK_PATH ""
#endif

/* *** */

namespace shared {

void (*chat)(char const*);

char const* (*teamName)();
char const* (*playerName)();

bool (*canJump)();

float (*walkingSpeed)();
float (*jumpSpeed)();
float (*sprintMultiplier)();

}

/* *** */

namespace impl {

static void (*chat)(char const*);
static char const* (*teamName)();
static char const* (*playerName)();
static bool (*canJump)();
static float (*walkingSpeed)();
static float (*sprintMultiplier)();
static float (*jumpSpeed)();

}

struct Player {
	void Chat(char const*);

	char const* GetTeamName();
	char const* GetPlayerName();

	bool CanJump();

	float GetWalkingSpeed();
	float GetSprintMultiplier();

	float GetJumpSpeed();
};

void Player::Chat(char const*s) {
	void reload();
	if(!*s) reload();
	return impl::chat(s);
}

char const* Player::GetTeamName() { return impl::teamName(); }
char const* Player::GetPlayerName() { return impl::playerName(); }
bool Player::CanJump() { return impl::canJump(); }
float Player::GetWalkingSpeed() { return impl::walkingSpeed(); }
float Player::GetSprintMultiplier() { return impl::sprintMultiplier(); }
float Player::GetJumpSpeed() { return impl::jumpSpeed(); }

/* *** */

template<typename F>
F &load(F &f, char const*name, void *handle = RTLD_NEXT) {
	return f = F(dlsym(handle, name));
}

void reload() {
	static void* handle = nullptr;
	std::printf("reloading from '%s'... ", HACK_PATH);

	if(handle) dlclose(handle);

	handle = dlopen(HACK_PATH, RTLD_LAZY);
	load(impl::chat, "chat", handle);
	load(impl::teamName, "teamName", handle);
	load(impl::playerName, "playerName", handle);
	load(impl::canJump, "canJump", handle);
	load(impl::walkingSpeed, "walkingSpeed", handle);
	load(impl::sprintMultiplier, "sprintMultiplier", handle);
	load(impl::jumpSpeed, "jumpSpeed", handle);

	std::puts("done");
}

#define LOAD(V, SYM) impl::V = load(shared::V, SYM)
static bool loaded = []{
	LOAD(chat,              "_ZN6Player4ChatEPKc");
	LOAD(teamName,          "_ZN6Player13GetPlayerNameEv");
	LOAD(playerName,        "_ZN7GameAPI11GetTeamNameEv");
	LOAD(canJump,           "_ZN6Player7CanJumpEv");
	LOAD(walkingSpeed,      "_ZN6Player15GetWalkingSpeedEv");
	LOAD(jumpSpeed,         "_ZN6Player12GetJumpSpeedEv");
	LOAD(sprintMultiplier,  "_ZN6Player19GetSprintMultiplierEv");

	std::puts("[hack] loaded");
	return true;
}();
