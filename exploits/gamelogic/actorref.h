#pragma once

template <class T>
struct ActorRef {
  private:
    T *m_object;

  public:
    ActorRef();
    ActorRef(T *);
    ActorRef(const ActorRef<T> &);
    ActorRef<T> & operator=(T *);
    ActorRef<T> & operator=(const ActorRef<T> &);
    T * operator->() const;
    operator bool() const;
    operator struct IActor *() const;
    T * Get() const;
    bool operator<(const ActorRef<T> &) const;
};

