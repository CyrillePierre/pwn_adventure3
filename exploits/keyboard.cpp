#include <cstdio>
#include <cstdint>
#include <ctype.h>
#include <err.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <unistd.h>
#include <X11/Xlib.h>
#include <X11/extensions/XInput2.h>
#include <X11/Xutil.h>

int main(int argc, char **) {
	int debug = argc > 1;
	int memid = shmget(0x1337, 256, IPC_CREAT | 0600);
	if(memid == -1) err(1, "shmget");
	auto mem = (uint8_t*) shmat(memid, nullptr, 0);
	if(mem == (void*)-1) err(2, "shmat");

    Display* display = XOpenDisplay(NULL);
    Window win;
    win = DefaultRootWindow(display);

    XIEventMask m;
	unsigned char mask[(XI_LASTEVENT + 7) / 8] = {0};
    m.deviceid = XIAllDevices;
    m.mask_len = XIMaskLen(XI_LASTEVENT);
    m.mask = mask;

    XISetMask(m.mask, XI_RawKeyPress);
    XISetMask(m.mask, XI_RawKeyRelease);
    XISelectEvents(display, win, &m, 1);

    XSync(display, False);

    while(1) {
		XEvent ev;
		auto cookie = (XGenericEventCookie*) &ev.xcookie;
		XNextEvent(display, &ev);

		if (XGetEventData(display, cookie) && cookie->type == GenericEvent) {
			XIRawEvent * re = (XIRawEvent*)cookie->data;
			mem[re->detail] = cookie->evtype == XI_RawKeyPress;
			if(debug) printf("%1$3u (%1$#2x): %2$u\n", re->detail, mem[re->detail]);
		}

		XFreeEventData(display, cookie);

//		for(int i = 0; i < 256; ++i)
//			printf("%2d", mem[i]);
//		puts("");
	}

	XDestroyWindow(display, win);
	XCloseDisplay(display);

	if(shmdt(mem) == -1) err(3, "shmdt");

	return 0;
}
